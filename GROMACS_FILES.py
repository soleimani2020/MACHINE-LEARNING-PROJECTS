#! /usr/bin/ipython3
import os
import numpy as np
import pandas as pd
import math
from   itertools import islice
import sys
import itertools 
from itertools import islice
import matplotlib.pyplot as plt




def MINIMIZATION(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE):
    
    file = open("Min_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+".mdp","w")
    file.write("integrator               = steep                                                             \n")
    file.write("emstep                   = 0.01                                                              \n")
    file.write("emtol                    = 10                                                                \n")
    file.write("nsteps                   = 1000000                                                           \n")
    file.write("nstenergy                = 500                                                               \n")
    file.write("nstlog                   = 500                                                               \n")
    file.write("nstxout-compressed       = 1000                                                              \n")
    file.write("; Single-range cutoff scheme                                                                 \n")
    file.write("cutoff-scheme            = group                                                             \n")
    file.write("; PME electrostatics parameters                                                              \n")
    file.write("coulombtype     = user        ; charges are set to zero in the topology file                 \n")
    file.write("rcoulomb        = "+str(rc)+"                                                                \n")
    file.write("; Non-bonded parameters                                                                      \n")
    file.write("vdwtype         = user                                                                       \n")
    file.write("rlist           = "+str(rc)+"                                                                \n")
    file.write("rvdw            = "+str(rc)+"    ; LJ cut-off                                                \n")
    file.write("energygrps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("energygrp-table = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    
    file.close()







def NVT(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE):
    
    file = open("NVT_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+".mdp","w")
    file.write("integrator               = sd         ; Langevin dynamics                                                                   \n")
    file.write("bd-fric                  = 0.5                                                                                              \n")
    file.write("ld-seed                  = -1                                                                                               \n")
    file.write("dt                       = 0.15                                                                                             \n")
    file.write("nsteps                   = 20000       ; 15ns                                                                              \n")
    file.write("nstcomm                  = 1            ; Remove center of mass translational velocity every step                           \n")
    file.write(";Output parameters                                                                                                          \n")
    file.write(";nstxout		= 1                ; saving coordinates every 10ps                                                           \n")
    file.write(";nstvout  	= 1                ; saving velocities                                                                       \n")
    file.write(";nstenergy	= 1                ; saving energies                                                                         \n")
    file.write(";nstlog		= 1                ; Updating logfile                                                                        \n")
    file.write("; Single-range cutoff scheme                                                                                                \n")
    file.write("cutoff-scheme            = group                                                                                            \n")
    file.write(";PME electrostatics parameters                                                                                              \n")
    file.write("coulombtype     = user        ; charges are set to zero in the topology file                                                \n")
    file.write("rcoulomb        = "+str(rc)+"                                                                \n")
    file.write("couple-intramol = yes                                                                                                       \n")
    file.write("; Non-bonded parameters                                                                                                     \n")
    file.write("vdwtype         = user                                                                                                      \n")
    file.write("rlist           = "+str(rc)+"                                                                                                      \n")
    file.write("rvdw            = "+str(rc)+"    ; LJ cut-off                                                \n")
    file.write("energygrps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("energygrp-table = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("; Temperature coupling is on                                                                                                \n")
    file.write("Tcoupl      = no                     ;Temperature coupling is handled by sd implicitely                                     \n")
    file.write("tc_grps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("tau_t       = 1.0    1.0             ;controls the period of the temperature fluctuations at equilibrium                    \n")
    file.write("ref_t       = 315    315             ;[K] reference temperature for coupling                                                \n")
    file.write("; Periodic boundary conditions                                                                                              \n")
    file.write("pbc                      = xyz                                                                                              \n")
    file.close()
    
    
def NVT_LT(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE):
    
    file = open("NVT_LT_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+".mdp","w")
    file.write("integrator               = sd         ; Langevin dynamics                                                                   \n")
    file.write("bd-fric                  = 0.5                                                                                              \n")
    file.write("ld-seed                  = -1                                                                                               \n")
    file.write("dt                       = 0.15                                                                                             \n")
    file.write("nsteps                   = 1680000      ; 252ns                                                                             \n")
    file.write("nstcomm                  = 1            ; Remove center of mass translational velocity every step                           \n")
    file.write(";Output parameters                                                                                                          \n")
    file.write(";nstxout		= 1            ; saving coordinates every 10ps                                                           \n")
    file.write(";nstvout  	= 1                ; saving velocities                                                                       \n")
    file.write("nstenergy	= 1                ; saving energies                                                                         \n")
    file.write(";nstlog		= 1                ; Updating logfile                                                                        \n")
    file.write("; Single-range cutoff scheme                                                                                                \n")
    file.write("cutoff-scheme            = group                                                                                            \n")
    file.write(";PME electrostatics parameters                                                                                              \n")
    file.write("coulombtype     = user        ; charges are set to zero in the topology file                                                \n")
    file.write("rcoulomb        = "+str(rc)+"                                                                \n")
    file.write("couple-intramol = yes                                                                                                       \n")
    file.write("; Non-bonded parameters                                                                                                     \n")
    file.write("vdwtype         = user                                                                                                      \n")
    file.write("rlist           = "+str(rc)+"                                                                                                      \n")
    file.write("rvdw            = "+str(rc)+"    ; LJ cut-off                                                \n")
    file.write("energygrps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("energygrp-table = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("; Temperature coupling is on                                                                                                \n")
    file.write("Tcoupl      = no                     ;Temperature coupling is handled by sd implicitely                                     \n")
    file.write("tc_grps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("tau_t       = 1.0    1.0             ;controls the period of the temperature fluctuations at equilibrium                    \n")
    file.write("ref_t       = 315    315             ;[K] reference temperature for coupling                                                \n")
    file.write("; Periodic boundary conditions                                                                                              \n")
    file.write("pbc                      = xyz                                                                                              \n")
    file.close()
    
    


def NPT(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE):
    
    file = open("NPT_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+".mdp","w")
    file.write("integrator               = sd         ; Langevin dynamics                                                                   \n")
    file.write("bd-fric                  = 0.5                                                                                              \n")
    file.write("ld-seed                  = -1                                                                                               \n")
    file.write("dt                       = 0.15                                                                                             \n")
    file.write("nsteps                   = 50000     ; 8ns                                                                                \n")
    file.write("nstcomm                  = 1           ; Remove center of mass translational velocity every step                            \n")
    file.write(";Output parameters                                                                                                          \n")
    file.write("nstxout		= 1000                ; saving coordinates every 10ps                                                       \n")
    file.write("nstvout  	= 1000                ; saving velocities                                                                   \n")
    file.write("nstenergy	= 1000                ; saving energies                                                                     \n")
    file.write("nstlog		= 1000                ; Updating logfile                                                                    \n")
    file.write("; Single-range cutoff scheme                                                                                                \n")
    file.write("cutoff-scheme            = group                                                                                            \n")
    file.write(";PME electrostatics parameters                                                                                              \n")
    file.write("coulombtype     = user        ; charges are set to zero in the topology file                                                \n")
    file.write("rcoulomb        = "+str(rc)+"                                                                \n")
    file.write("couple-intramol = yes                                                                                                       \n")
    file.write("; Non-bonded parameters                                                                                                     \n")
    file.write("vdwtype         = user                                                                                                      \n")
    file.write("rlist           = "+str(rc)+"                                                                                                      \n")
    file.write("rvdw            = "+str(rc)+"    ; LJ cut-off                                                \n")
    file.write("energygrps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("energygrp-table = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("; Temperature coupling is on                                                                                                \n")
    file.write("Tcoupl      = no                     ;Temperature coupling is handled by sd implicitely                                     \n")
    file.write("tc_grps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("tau_t       = 1.0    1.0             ;controls the period of the temperature fluctuations at equilibrium                    \n")
    file.write("ref_t       = 315    315             ;[K] reference temperature for coupling                                                \n")
    file.write("; Surface Tension coupling is on                                                                                            \n")
    file.write("pcoupl                   = Berendsen ;;; Parrinello-Rahman                                                                  \n")
    file.write("pcoupltype               = surface_tension ;;;               surface-tension                                                \n")
    file.write("ref-p                    = 0.0     1.0          ; value1=reference surface tension                                          \n")
    file.write("tau_p                    = 1.0                                                                                              \n")
    file.write("compressibility          = 4.5e-5  0            ; compressibility in x/y but no compressibility in Z                        \n")
    file.write("; Periodic boundary conditions                                                                                              \n")
    file.write("pbc                      = xyz                                                                                              \n")
    file.close()



def NPT_PP(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE):
    
    file = open("NPT_PP_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+".mdp","w")
    file.write("integrator               = sd         ; Langevin dynamics                                                                   \n")
    file.write("bd-fric                  = 0.5                                                                                              \n")
    file.write("ld-seed                  = -1                                                                                               \n")
    file.write("dt                       = 0.15                                                                                             \n")
    file.write("nsteps                   = 1000000     ; 150ns                                                                              \n")
    file.write("nstcomm                  = 1           ; Remove center of mass translational velocity every step                            \n")
    file.write(";Output parameters                                                                                                          \n")
    file.write("nstxout		= 1000                ; saving coordinates every 10ps                                                       \n")
    file.write("nstvout  	= 1000                ; saving velocities                                                                   \n")
    file.write("nstenergy	= 1000                ; saving energies                                                                     \n")
    file.write("nstlog		= 1000                ; Updating logfile                                                                    \n")
    file.write("; Single-range cutoff scheme                                                                                                \n")
    file.write(";cutoff-scheme            = group                                                                                            \n")
    file.write(";PME electrostatics parameters                                                                                              \n")
    file.write("coulombtype     = user        ; charges are set to zero in the topology file                                                \n")
    file.write("rcoulomb        = "+str(rc)+"                                                                \n")
    file.write("userreal1 = 0.1                                                                                                       \n")
    file.write("; Non-bonded parameters                                                                                                     \n")
    file.write("vdwtype         = user                                                                                                      \n")
    file.write("rlist           = "+str(rc)+"                                                                                                      \n")
    file.write("rvdw            = "+str(rc)+"    ; LJ cut-off                                                \n")
    file.write("energygrps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("energygrp-table = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("; Temperature coupling is on                                                                                                \n")
    file.write("Tcoupl      = no                     ;Temperature coupling is handled by sd implicitely                                     \n")
    file.write("tc_grps = T-"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+"\n")
    file.write("tau_t       = 1.0    1.0             ;controls the period of the temperature fluctuations at equilibrium                    \n")
    file.write("ref_t       = 315    315             ;[K] reference temperature for coupling                                                \n")
    file.write("; Surface Tension coupling is on                                                                                            \n")
    file.write("pcoupl                   = Berendsen ;;; Parrinello-Rahman                                                                  \n")
    file.write("pcoupltype               = surface_tension ;;;               surface-tension                                                \n")
    file.write("ref-p                    = 0.0     1.0          ; value1=reference surface tension                                          \n")
    file.write("tau_p                    = 1.0                                                                                              \n")
    file.write("compressibility          = 4.5e-5  0            ; compressibility in x/y but no compressibility in Z                        \n")
    file.write("; Periodic boundary conditions                                                                                              \n")
    file.write("pbc                      = xyz                                                                                              \n")
    file.close()






def FORCEFIELD(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE):

    file = open("forcefield_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+".itp","w")
    file.write(";nbfunc=1 --- LJ interaction                                                                                                       \n")
    file.write(";comb-rule=1 --- A & C parameters are directly specified in topology                                                               \n")
    file.write(";;; The parameters for Interactions between atoms of the same type                                                                 \n")
    file.write("[ atomtypes ]                                                                                                                      \n")
    file.write("; name	        bond type mass	   charge    ptype   C	                    A                                                      \n")
    file.write("    opls_T      opls_T    249      0     A       1     1           ; Tail-Tail                                                     \n")
    file.write("    opls_H      opls_H    249      0     A       1     1           ; Head-Head                                                     \n")
    file.write(";;; Cross terms                                                                                                                    \n")
    file.write("[ nonbond_params ]                                                                                                                 \n")
    file.write(";      i	   j	   func	       C      A                                                                                    \n")
    file.write("    opls_H      opls_H     1           1     1                                                                                     \n")
    file.write("    opls_T      opls_T     1           1     1                                                                                     \n")
    file.write("    opls_T      opls_H     1           1     1                                                                                     \n")
    file.write(";length=nm                                                                                                                         \n")
    file.write(";force.c.= kJ/(mol.nm^2)                                                                                                           \n")
    file.write("[ bondtypes ]                                                                                                                      \n")
    file.write(";    i	       j	func	    length	force.c.                                                                           \n")
    file.write("   opls_T    opls_H     1           1.0         "+str(bFC)+"                                                                       \n")
    file.write(";angle= deg                                                                                                                        \n")
    file.write(";force.c.= kJ/(mol.rad^2)                                                                                                          \n")
    file.write("[ angletypes ]                                                                                                                     \n")
    file.write(";      i	j	k	  func	       angle	force.c.                                                                   \n")
    file.write("   opls_T     opls_H    opls_T     1           "+str(10)+str("     ")+str(aFC)+"                                                  \n")
    file.close()






def TOPOLOGY(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE):
    file = open("topol_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+".top","w")
    file.write("[ defaults ]                                                                                                                        \n")
    file.write("; nbfunc	comb-rule	gen-pairs	fudgeLJ	fudgeQQ                                                                     \n")
    file.write("1	1	yes	1.0	1.0                                                                                                 \n")
    file.write("; Include forcefield parameters                                                                                                     \n")
    file.write('#include "forcefield_'+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+'.itp" \n')
    file.write("                                                                                                                                    \n")
    file.write("[ moleculetype ]                                                                                                                    \n")
    file.write("; name	nrexcl                                                                                                                      \n")
    file.write("POPC	     2                                                                                                                      \n")
    file.write("[ atoms ]                                                                                                                           \n")
    file.write(";    nr	        type	   resnr residu	  atom	  cgnr	 charge	  mass                                                              \n")
    file.write("     1        opls_T       1     Tal      T1      1      0.000    249   ; qtot 0                                                    \n")
    file.write("     2        opls_T       1     Tal      T2      2      0.000    249   ; qtot 0                                                    \n")
    file.write("     3        opls_H       1     Had      H       3      0.000    249   ; qtot 0                                                    \n")
    file.write("                                                                                                                                    \n")
    file.write("[ bonds ]                                                                                                                           \n")
    file.write("; ai	aj	funct	length	force.c.                                                                                            \n")
    file.write("    1     3     1             ;  opls_T-opls_T                                                                                      \n")
    file.write("    2     3     1             ;  opls_T-opls_H                                                                                      \n")
    file.write("                                                                                                                                    \n")
    file.write("[ pairs ]                                                                                                                           \n")
    file.write("; ai	aj	funct	                                                                                                            \n")
    file.write("     1    2     1      ; opls_T- opls_T                                                                                             \n")
    file.write("     1    3     1      ; opls_T- opls_H                                                                                             \n")
    file.write("     2    3     1      ; opls_T- opls_H                                                                                             \n")
    file.write("                                                                                                                                    \n")
    file.write("[ angles ]                                                                                                                          \n")
    file.write("; ai	aj	ak	funct	angle	force.c.                                                                                    \n")
    file.write("    1     3     2     1      ;   opls_T- opls_H - opls_T                                                                            \n")
    file.write("                                                                                                                                    \n")
    file.write("                                                                                                                                    \n")
    file.write("[ system ]                                                                                                                          \n")
    file.write("; Name                                                                                                                              \n")
    file.write("POPC                                                                                                                                \n")
    file.write("                                                                                                                                    \n")
    file.write("[ molecules ]                                                                                                                       \n")
    file.write("; Compound	#mols                                                                                                                   \n")
    file.write("POPC  	       1632                                                                                                               \n")
    file.close()





def TOPOLOGY_LT(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE):
    file = open("topol_LT_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+".top","w")
    file.write("[ defaults ]                                                                                                                        \n")
    file.write("; nbfunc	comb-rule	gen-pairs	fudgeLJ	fudgeQQ                                                                     \n")
    file.write("1	1	yes	1.0	1.0                                                                                                 \n")
    file.write("; Include forcefield parameters                                                                                                     \n")
    file.write('#include "forcefield_'+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+'.itp" \n')
    file.write("                                                                                                                                    \n")
    file.write("[ moleculetype ]                                                                                                                    \n")
    file.write("; name	nrexcl                                                                                                                      \n")
    file.write("POPC	     2                                                                                                                      \n")
    file.write("[ atoms ]                                                                                                                           \n")
    file.write(";    nr	        type	   resnr residu	  atom	  cgnr	 charge	  mass                                                              \n")
    file.write("     1        opls_T       1     Tal      T1      1      0.000    249   ; qtot 0                                                    \n")
    file.write("     2        opls_T       1     Tal      T2      2      0.000    249   ; qtot 0                                                    \n")
    file.write("     3        opls_H       1     Had      H       3      0.000    249   ; qtot 0                                                    \n")
    file.write("                                                                                                                                    \n")
    file.write("[ bonds ]                                                                                                                           \n")
    file.write("; ai	aj	funct	length	force.c.                                                                                            \n")
    file.write("    1     3     1             ;  opls_T-opls_T                                                                                      \n")
    file.write("    2     3     1             ;  opls_T-opls_H                                                                                      \n")
    file.write("                                                                                                                                    \n")
    file.write("[ pairs ]                                                                                                                           \n")
    file.write("; ai	aj	funct	                                                                                                            \n")
    file.write("     1    2     1      ; opls_T- opls_T                                                                                             \n")
    file.write("     1    3     1      ; opls_T- opls_H                                                                                             \n")
    file.write("     2    3     1      ; opls_T- opls_H                                                                                             \n")
    file.write("                                                                                                                                    \n")
    file.write("[ angles ]                                                                                                                          \n")
    file.write("; ai	aj	ak	funct	angle	force.c.                                                                                    \n")
    file.write("    1     3     2     1      ;   opls_T- opls_H - opls_T                                                                            \n")
    file.write("                                                                                                                                    \n")
    file.write("                                                                                                                                    \n")
    file.write("[ system ]                                                                                                                          \n")
    file.write("; Name                                                                                                                              \n")
    file.write("POPC                                                                                                                                \n")
    file.write("                                                                                                                                    \n")
    file.write("[ molecules ]                                                                                                                       \n")
    file.write("; Compound	#mols                                                                                                                   \n")
    file.write("POPC             376                                                                                                               \n")
    file.close()



        


def MINIMIZATION_PTT(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE,Temp):
    
    file = open("Min_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+str("_")+str(Temp)+".mdp","w")
    file.write("integrator               = steep                                                             \n")
    file.write("emstep                   = 0.01                                                              \n")
    file.write("emtol                    = 10                                                                \n")
    file.write("nsteps                   = 1000000                                                           \n")
    file.write("nstenergy                = 500                                                               \n")
    file.write("nstlog                   = 500                                                               \n")
    file.write("nstxout-compressed       = 1000                                                              \n")
    file.write("; Single-range cutoff scheme                                                                 \n")
    file.write("cutoff-scheme            = group                                                             \n")
    file.write("; PME electrostatics parameters                                                              \n")
    file.write("coulombtype     = user        ; charges are set to zero in the topology file                 \n")
    file.write("rcoulomb        = "+str(rc)+"                                                                \n")
    file.write("; Non-bonded parameters                                                                      \n")
    file.write("vdwtype         = user                                                                       \n")
    file.write("rlist           = "+str(rc)+"                                                                \n")
    file.write("rvdw            = "+str(rc)+"    ; LJ cut-off                                                \n")
    file.write("energygrps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("energygrp-table = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    
    file.close()



        
        
def NVT_PTT(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE,Temp):
    
    file = open("NVT_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+str("_")+str(Temp)+".mdp","w")
    file.write("integrator               = sd         ; Langevin dynamics                                                                   \n")
    file.write("bd-fric                  = 0.5                                                                                              \n")
    file.write("ld-seed                  = -1                                                                                               \n")
    file.write("dt                       = 0.15                                                                                             \n")
    file.write("nsteps                   = 50000    ; 10ns                                                                              \n")
    file.write("nstcomm                  = 1            ; Remove center of mass translational velocity every step                           \n")
    file.write(";Output parameters                                                                                                          \n")
    file.write(";nstxout		= 1                ; saving coordinates every 10ps                                                           \n")
    file.write(";nstvout  	= 1                ; saving velocities                                                                       \n")
    file.write(";nstenergy	= 1                ; saving energies                                                                         \n")
    file.write(";nstlog		= 1                ; Updating logfile                                                                        \n")
    file.write("; Single-range cutoff scheme                                                                                                \n")
    file.write("cutoff-scheme            = group                                                                                            \n")
    file.write(";PME electrostatics parameters                                                                                              \n")
    file.write("coulombtype     = user        ; charges are set to zero in the topology file                                                \n")
    file.write("rcoulomb        = "+str(rc)+"                                                                \n")
    file.write("couple-intramol = yes                                                                                                       \n")
    file.write("; Non-bonded parameters                                                                                                     \n")
    file.write("vdwtype         = user                                                                                                      \n")
    file.write("rlist           = "+str(rc)+"                                                                                                      \n")
    file.write("rvdw            = "+str(rc)+"    ; LJ cut-off                                                \n")
    file.write("energygrps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("energygrp-table = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("; Temperature coupling is on                                                                                                \n")
    file.write("Tcoupl      = no                     ;Temperature coupling is handled by sd implicitely                                     \n")
    file.write("tc_grps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("tau_t       = 1.0    1.0             ;controls the period of the temperature fluctuations at equilibrium                    \n")
    file.write("ref_t       = "+str(Temp)+"    "+str(Temp)+"             ;[K] reference temperature for coupling                            \n")
    file.write("; Periodic boundary conditions                                                                                              \n")
    file.write("pbc                      = xyz                                                                                              \n")
    file.close()
    
    
    

def NPT_PTT(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE,Temp):
    
    file = open("NPT_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+str("_")+str(Temp)+".mdp","w")
    file.write("integrator               = sd         ; Langevin dynamics                                                                   \n")
    file.write("bd-fric                  = 0.5                                                                                              \n")
    file.write("ld-seed                  = -1                                                                                               \n")
    file.write("dt                       = 0.15                                                                                             \n")
    file.write("nsteps                   = 240000     ; 36ns                                                                              \n")
    file.write("nstcomm                  = 1           ; Remove center of mass translational velocity every step                            \n")
    file.write(";Output parameters                                                                                                          \n")
    file.write("nstxout		= 1000                ; saving coordinates every 10ps                                                       \n")
    file.write("nstvout  	= 1000                ; saving velocities                                                                   \n")
    file.write("nstenergy	= 1000                ; saving energies                                                                     \n")
    file.write("nstlog		= 1000                ; Updating logfile                                                                    \n")
    file.write("; Single-range cutoff scheme                                                                                                \n")
    file.write("cutoff-scheme            = group                                                                                            \n")
    file.write(";PME electrostatics parameters                                                                                              \n")
    file.write("coulombtype     = user        ; charges are set to zero in the topology file                                                \n")
    file.write("rcoulomb        = "+str(rc)+"                                                                \n")
    file.write("couple-intramol = yes                                                                                                       \n")
    file.write("; Non-bonded parameters                                                                                                     \n")
    file.write("vdwtype         = user                                                                                                      \n")
    file.write("rlist           = "+str(rc)+"                                                                                                      \n")
    file.write("rvdw            = "+str(rc)+"    ; LJ cut-off                                                \n")
    file.write("energygrps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("energygrp-table = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("; Temperature coupling is on                                                                                                \n")
    file.write("Tcoupl      = no                     ;Temperature coupling is handled by sd implicitely                                     \n")
    file.write("tc_grps = T-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+str("    ")+"H-"+str(epsilon)+"-"+str(rmin)+"-"+str(r1)+"-"+str(rc)+"-"+str(bFC)+"-"+str(aFC)+"-"+str(Friction)+"-"+str(NFE)+"\n")
    file.write("tau_t       = 1.0    1.0             ;controls the period of the temperature fluctuations at equilibrium                    \n")
    file.write("ref_t       = "+str(Temp)+"    "+str(Temp)+"             ;[K] reference temperature for coupling                            \n")
    file.write("; Surface Tension coupling is on                                                                                            \n")
    file.write("pcoupl                   = Berendsen ;;; Parrinello-Rahman                                                                  \n")
    file.write("pcoupltype               = surface_tension ;;;               surface-tension                                                \n")
    file.write("ref-p                    = 0.0     1.0          ; value1=reference surface tension                                          \n")
    file.write("tau_p                    = 1.0                                                                                              \n")
    file.write("compressibility          = 4.5e-5  0            ; compressibility in x/y but no compressibility in Z                        \n")
    file.write("; Periodic boundary conditions                                                                                              \n")
    file.write("pbc                      = xyz                                                                                              \n")
    file.close()



def TOPOLOGY_PTT(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE,Temp):
    file = open("topol_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+str("_")+str(Temp)+".top","w")
    file.write("[ defaults ]                                                                                                                        \n")
    file.write("; nbfunc	comb-rule	gen-pairs	fudgeLJ	fudgeQQ                                                                     \n")
    file.write("1	1	yes	1.0	1.0                                                                                                 \n")
    file.write("; Include forcefield parameters                                                                                                     \n")
    file.write('#include "forcefield_'+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+str("_")+str(Temp)+'.itp" \n')
    file.write("                                                                                                                                    \n")
    file.write("[ moleculetype ]                                                                                                                    \n")
    file.write("; name	nrexcl                                                                                                                      \n")
    file.write("POPC	     2                                                                                                                      \n")
    file.write("[ atoms ]                                                                                                                           \n")
    file.write(";    nr	        type	   resnr residu	  atom	  cgnr	 charge	  mass                                                              \n")
    file.write("     1        opls_T       1     Tal      T1      1      0.000    249   ; qtot 0                                                    \n")
    file.write("     2        opls_T       1     Tal      T2      2      0.000    249   ; qtot 0                                                    \n")
    file.write("     3        opls_H       1     Had      H       3      0.000    249   ; qtot 0                                                    \n")
    file.write("                                                                                                                                    \n")
    file.write("[ bonds ]                                                                                                                           \n")
    file.write("; ai	aj	funct	length	force.c.                                                                                            \n")
    file.write("    1     3     1             ;  opls_T-opls_T                                                                                      \n")
    file.write("    2     3     1             ;  opls_T-opls_H                                                                                      \n")
    file.write("                                                                                                                                    \n")
    file.write("[ pairs ]                                                                                                                           \n")
    file.write("; ai	aj	funct	                                                                                                            \n")
    file.write("     1    2     1      ; opls_T- opls_T                                                                                             \n")
    file.write("     1    3     1      ; opls_T- opls_H                                                                                             \n")
    file.write("     2    3     1      ; opls_T- opls_H                                                                                             \n")
    file.write("                                                                                                                                    \n")
    file.write("[ angles ]                                                                                                                          \n")
    file.write("; ai	aj	ak	funct	angle	force.c.                                                                                    \n")
    file.write("    1     3     2     1      ;   opls_T- opls_H - opls_T                                                                            \n")
    file.write("                                                                                                                                    \n")
    file.write("                                                                                                                                    \n")
    file.write("[ system ]                                                                                                                          \n")
    file.write("; Name                                                                                                                              \n")
    file.write("POPC                                                                                                                                \n")
    file.write("                                                                                                                                    \n")
    file.write("[ molecules ]                                                                                                                       \n")
    file.write("; Compound	#mols                                                                                                                   \n")
    file.write("POPC  	       400                                                                                                               \n")
    file.close()



def FORCEFIELD_PTT(epsilon,rmin,r1,rc,bFC,aFC,Friction,NFE,Temp):

    file = open("forcefield_"+str(epsilon)+str("_")+str(rmin)+str("_")+str(r1)+str("_")+str(rc)+str("_")+str(bFC)+str("_")+str(aFC)+str("_")+str(Friction)+str("_")+str(NFE)+str("_")+str(Temp)+".itp","w")
    file.write(";nbfunc=1 --- LJ interaction                                                                                                       \n")
    file.write(";comb-rule=1 --- A & C parameters are directly specified in topology                                                               \n")
    file.write(";;; The parameters for Interactions between atoms of the same type                                                                 \n")
    file.write("[ atomtypes ]                                                                                                                      \n")
    file.write("; name	        bond type mass	   charge    ptype   C	                    A                                                      \n")
    file.write("    opls_T      opls_T    249      0     A       1     1           ; Tail-Tail                                                     \n")
    file.write("    opls_H      opls_H    249      0     A       1     1           ; Head-Head                                                     \n")
    file.write(";;; Cross terms                                                                                                                    \n")
    file.write("[ nonbond_params ]                                                                                                                 \n")
    file.write(";      i	   j	   func	       C      A                                                                                    \n")
    file.write("    opls_H      opls_H     1           1     1                                                                                     \n")
    file.write("    opls_T      opls_T     1           1     1                                                                                     \n")
    file.write("    opls_T      opls_H     1           1     1                                                                                     \n")
    file.write(";length=nm                                                                                                                         \n")
    file.write(";force.c.= kJ/(mol.nm^2)                                                                                                           \n")
    file.write("[ bondtypes ]                                                                                                                      \n")
    file.write(";    i	       j	func	    length	force.c.                                                                           \n")
    file.write("   opls_T    opls_H     1           1.0         "+str(bFC)+"                                                                       \n")
    file.write(";angle= deg                                                                                                                        \n")
    file.write(";force.c.= kJ/(mol.rad^2)                                                                                                          \n")
    file.write("[ angletypes ]                                                                                                                     \n")
    file.write(";      i	j	k	  func	       angle	force.c.                                                                   \n")
    file.write("   opls_T     opls_H    opls_T     1           "+str(10)+str("     ")+str(aFC)+"                                                  \n")
    file.close()


